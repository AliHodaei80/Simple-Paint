import java.awt.*;
import java.util.*;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author asus
 */
public class MyPanel extends javax.swing.JPanel {
    ArrayList<ArrayList<Point>> points=new ArrayList();
    ArrayList<Color> colors=new ArrayList();
    int counter=0;
    /**
     * Creates new form MyPanel
     */
    public MyPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                formMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 398, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 298, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        if(counter==0 && points.isEmpty()){
            points.add(new ArrayList<>());
            if(colors.isEmpty())
                colors.add(Color.black);
        }
        
        points.get(counter).add(evt.getPoint());
        this.repaint();
    }//GEN-LAST:event_formMouseDragged
    void addColor(Color color){
        if(!colors.isEmpty())
            colors.remove(counter);
        colors.add(color);
    }
    private void formMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseReleased
        counter++;
        points.add(new ArrayList<>());
        colors.add(this.getForeground());
    }//GEN-LAST:event_formMouseReleased
    @Override
    public void paintComponent(Graphics g){
        super.paintComponent(g);
        Graphics2D g2 = (Graphics2D) g;
        g2.setStroke(new BasicStroke(5));
        for(int j=0;j<points.size();j++){
            g2.setColor(colors.get(j));
            for(int i=0;i<points.get(j).size()-1 ;i++){
                g2.drawLine(points.get(j).get(i).x, points.get(j).get(i).y,
                        points.get(j).get(i+1).x, points.get(j).get(i+1).y);
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
